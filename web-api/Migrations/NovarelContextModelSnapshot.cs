// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using web_api.Models;

namespace web_api.Migrations
{
    [DbContext(typeof(NovarelContext))]
    partial class NovarelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("web_api.Models.Dto.Commercial.ActionTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Commentaire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAction")
                        .HasColumnType("datetime2");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<int?>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("ActionTickets");
                });

            modelBuilder.Entity("web_api.Models.Dto.Commercial.ModeOuverture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ModeOuvertures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Libelle = "Email"
                        },
                        new
                        {
                            Id = 2,
                            Libelle = "Téléphone"
                        },
                        new
                        {
                            Id = 3,
                            Libelle = "Présentiel"
                        },
                        new
                        {
                            Id = 4,
                            Libelle = "Autres"
                        });
                });

            modelBuilder.Entity("web_api.Models.Dto.Commercial.ObjetTicket", b =>
                {
                    b.Property<int>("ObjetId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("ObjetId", "TicketId");

                    b.HasIndex("TicketId");

                    b.ToTable("ObjetTickets");
                });

            modelBuilder.Entity("web_api.Models.Dto.Commercial.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<DateTime?>("DateCloture")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFait")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOuverture")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmplacementId")
                        .HasColumnType("int");

                    b.Property<string>("Immatriculation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCloture")
                        .HasColumnType("bit");

                    b.Property<string>("Marque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModeOuvertureId")
                        .HasColumnType("int");

                    b.Property<string>("Modele")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmplacementId");

                    b.HasIndex("ModeOuvertureId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("web_api.Models.Dto.Organisation.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Libelle = "Commercial"
                        },
                        new
                        {
                            Id = 2,
                            Libelle = "Viabilite"
                        },
                        new
                        {
                            Id = 3,
                            Libelle = "Informatique"
                        },
                        new
                        {
                            Id = 4,
                            Libelle = "Direction"
                        });
                });

            modelBuilder.Entity("web_api.Models.Dto.Organisation.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemenberToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("Utilisateurs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@pont-hkb.com",
                            Name = "Administrateur",
                            Password = "hH/qH+78aR/TKtgWQtvnBO8faQ0zzkxNzsiB+aL2sUA=",
                            ServiceId = 3,
                            Status = "A"
                        },
                        new
                        {
                            Id = 2,
                            Email = "commercial@pont-hkb.com",
                            Name = "Commercial",
                            Password = "hH/qH+78aR/TKtgWQtvnBO8faQ0zzkxNzsiB+aL2sUA=",
                            ServiceId = 1,
                            Status = "A"
                        },
                        new
                        {
                            Id = 3,
                            Email = "viabilite@pont-hkb.com",
                            Name = "Viablite",
                            Password = "hH/qH+78aR/TKtgWQtvnBO8faQ0zzkxNzsiB+aL2sUA=",
                            ServiceId = 2,
                            Status = "A"
                        });
                });

            modelBuilder.Entity("web_api.Models.Dto.Pont.Emplacement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZoneId");

                    b.ToTable("Emplacements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Libelle = "OA6 Bis",
                            ZoneId = 2
                        },
                        new
                        {
                            Id = 2,
                            Libelle = "C 0",
                            ZoneId = 3
                        },
                        new
                        {
                            Id = 3,
                            Libelle = "OA 2",
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 4,
                            Libelle = "NT01",
                            ZoneId = 4
                        },
                        new
                        {
                            Id = 5,
                            Libelle = "NT02",
                            ZoneId = 4
                        },
                        new
                        {
                            Id = 6,
                            Libelle = "NX03",
                            ZoneId = 4
                        },
                        new
                        {
                            Id = 7,
                            Libelle = "SM09",
                            ZoneId = 4
                        });
                });

            modelBuilder.Entity("web_api.Models.Dto.Pont.Zone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Libelle = "Section courante Nord"
                        },
                        new
                        {
                            Id = 2,
                            Libelle = "Section courante Sud"
                        },
                        new
                        {
                            Id = 3,
                            Libelle = "Viaduc (Pont)"
                        },
                        new
                        {
                            Id = 4,
                            Libelle = "Aire de péage"
                        });
                });

            modelBuilder.Entity("web_api.Models.Dto.Shared.Objet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Objets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Libelle = "Problèmes liés à la classification",
                            Module = "COMM"
                        },
                        new
                        {
                            Id = 2,
                            Libelle = "Etat du réseau",
                            Module = "COMM"
                        },
                        new
                        {
                            Id = 3,
                            Libelle = "Sécurité",
                            Module = "COMM"
                        },
                        new
                        {
                            Id = 4,
                            Libelle = "Problèmes liés au dépannage",
                            Module = "COMM"
                        },
                        new
                        {
                            Id = 5,
                            Libelle = "Problèmes liés au badges",
                            Module = "COMM"
                        },
                        new
                        {
                            Id = 6,
                            Libelle = "Problèmes liés au personnel",
                            Module = "COMM"
                        },
                        new
                        {
                            Id = 7,
                            Libelle = "Problèmes liés aux opérateurs mobile",
                            Module = "COMM"
                        },
                        new
                        {
                            Id = 8,
                            Libelle = "Autres objets",
                            Module = "COMM"
                        });
                });

            modelBuilder.Entity("web_api.Models.Dto.Shared.PieceJointe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActionTicketId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatePiece")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActionTicketId");

                    b.HasIndex("TicketId");

                    b.ToTable("PieceJointes");
                });

            modelBuilder.Entity("web_api.Models.Dto.Commercial.ActionTicket", b =>
                {
                    b.HasOne("web_api.Models.Dto.Commercial.Ticket", "Ticket")
                        .WithMany("Actions")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web_api.Models.Dto.Organisation.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId");
                });

            modelBuilder.Entity("web_api.Models.Dto.Commercial.ObjetTicket", b =>
                {
                    b.HasOne("web_api.Models.Dto.Shared.Objet", "Objet")
                        .WithMany("ObjetTickets")
                        .HasForeignKey("ObjetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web_api.Models.Dto.Commercial.Ticket", "Ticket")
                        .WithMany("ObjetTickets")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("web_api.Models.Dto.Commercial.Ticket", b =>
                {
                    b.HasOne("web_api.Models.Dto.Pont.Emplacement", "Emplacement")
                        .WithMany()
                        .HasForeignKey("EmplacementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web_api.Models.Dto.Commercial.ModeOuverture", "ModeOuverture")
                        .WithMany()
                        .HasForeignKey("ModeOuvertureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web_api.Models.Dto.Organisation.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("web_api.Models.Dto.Organisation.Utilisateur", b =>
                {
                    b.HasOne("web_api.Models.Dto.Organisation.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("web_api.Models.Dto.Pont.Emplacement", b =>
                {
                    b.HasOne("web_api.Models.Dto.Pont.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("web_api.Models.Dto.Shared.PieceJointe", b =>
                {
                    b.HasOne("web_api.Models.Dto.Commercial.ActionTicket", "ActionTicket")
                        .WithMany("PieceJointes")
                        .HasForeignKey("ActionTicketId");

                    b.HasOne("web_api.Models.Dto.Commercial.Ticket", "Ticket")
                        .WithMany("PieceJointes")
                        .HasForeignKey("TicketId");
                });
#pragma warning restore 612, 618
        }
    }
}
